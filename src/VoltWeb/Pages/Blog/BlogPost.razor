@page "/blog/{year:int}/{month:int}/{day:int}/{id}/"
@using VoltWeb.Data
@inject BlogService BlogService

    <PageTitle>@pageTitle</PageTitle>
    

<!-- Loading Screen --->
@if (loading)
{
    <div class="pt-5 d-flex justify-content-center">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>
    return;
}

@if (blog == null)
{
    <h1>Blog not found!</h1>
}
else
{
    <div class="pt-4 container">
        <div class="card hero shadow">
            <img src="/assets/Banner1.jpg" alt="Background" class="card-img"/>
            <div class="card-img-overlay">
                <h1 class="card-title">@blog.Value.HeroData.Title</h1>
                <p class="card-text">@blog.Value.HeroData.Text</p>
            </div>
        </div>
    </div>

    <div class="pt-3 container">
        <div class="content">
            <div>
                <div>
                    <h2>@blog.Value.Title</h2>
                    <ul class="metabar">
                        <li>
                            <ToLocal DateTime="@blog.Value.PublishedDate" Format="yyyy-mm-dd"></ToLocal>
                        </li>
                            
                        <li>
                            @blog.Value.ReadingTime minutes to read
                        </li>
                            
                        <li>
                            @foreach (BlogPostData.Author author in blog.Value.Authors)
                            {
                                <img width="32" class="rounded-circle" alt="@author.Name" title="@author.Name" src="data:image;base64,@author.ImageBytes" />
                            }
                        </li>
                
                    </ul>
                    <div class="pt-2">
                        @blog.Value.HtmlContent
                    </div>
                </div>
            </div>
                
            <aside>
                <div class="card">
                    <h6 class="card-header">Table of Content</h6>
                    <div class="card-body table-of-content">
                        <ul class="nav flex-column">
                            @foreach (string heading in blog.Value.Headings)
                            {
                                <li class="nav-item">
                                    <AnchorLink class="nav-link" href="@($"#{heading.ToLower().Replace(" ", "-")}")" >@heading</AnchorLink>
                                </li>
                            }
                        </ul>
                           
                    </div>
                </div>
                    
                    
            </aside>
        </div>
    </div>
}

@code
{
    [Parameter]
    public int Year { get; set; }
    
    [Parameter]
    public int Month { get; set; }
    
    [Parameter]
    public int Day { get; set; }
    
    [Parameter]
    public string Id { get; set; } = null!;

    private BlogPostData? blog;
    private string pageTitle;
    private bool loading;
    
    [Inject]
    protected IJSRuntime JsInterop { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        //Load, and get blog post
        loading = true;
        pageTitle = "Loading";
        
        blog = await BlogService.GetBlogPost(Year, Month, Day, Id);
        loading = false;

        //Set page title
        pageTitle = blog == null ? "Not Found!" : blog.Value.Title;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(!firstRender)
            return;
        
        //Highlight code blocks
        if(blog is {ContainsCodeBlocks: true })
            await JsInterop.InvokeVoidAsync("blazorHelpers.highlightCode");
    }
}
